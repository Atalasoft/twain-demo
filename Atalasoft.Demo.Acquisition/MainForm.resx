<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>27, 16</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAACgjH3hzcDhzcDhzcDhzcDhzcDhzcDhzcDhzcDhzcDhzcDhzcDhzcDhzcDhzcDhzcCGYk0AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgjH2gjH2gjH2gjH2gjH2gjH2gjH2g
        jH2gjH2gjH2gjH2gjH2gjH2gjH2gjH2gjH2gjH0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/////////////////////8AAP/+AAB//gAAP/4AAB/+AAAP/wAAB/+AAAP/wAAB/+AAAP/wAAB/+A
        AAf/wAAH/+AAB//wAAf/8AAH/+AAD//AAB//gAA//wAAf/4AAP/8AAH/+AAD//AAB///////////////
        /////////////w==
</value>
  </data>
</root>